import { Button } from '@components/common';
import type { IExploit, IExploitResponse } from '@lib/exploits/interfaces';
import { RiArrowLeftLine } from 'react-icons/ri';

interface ExploitWindowProps {
	exploit: IExploit;
	status?: IExploitResponse;
	onBackCallback: () => void;
	onRunCallback: () => void;
}

export const ExploitWindow: React.FC<ExploitWindowProps> = ({
	exploit,
	status,
	onBackCallback,
	onRunCallback
}) => {
	console.log(status);
	return (
		<div className="bg-dark-primary-dark">
			<div className="p-4 text-base flex w-full justify-between leading-none">
				<Button onClick={onBackCallback}>
					<RiArrowLeftLine />
				</Button>
				<p>{exploit.name}</p>
				<p>{exploit.version as string}</p>
			</div>
			<hr className="border-dark-primary border-1.5" />
			<p className="p-4 text-sm text-dark-primary-lighter text-left">
				{exploit.description}
			</p>
			<Button
				onClick={onRunCallback}
				className={`p-3 text-sm w-full transition-colors ${
					status
						? status.success
							? 'bg-dark-green'
							: 'bg-dark-red'
						: 'bg-dark-blue'
				}`}
			>
				<p>Hack it!</p>
			</Button>
		</div>
	);
};
